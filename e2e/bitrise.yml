format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared test secrets
  - BITRISE_KEYCHAIN_PATH: $BITRISE_KEYCHAIN_PATH
  - BITRISE_KEYCHAIN_PASSWORD: $BITRISE_KEYCHAIN_PASSWORD
  - BITFALL_APPLE_APPLE_CERTIFICATE_URL_LIST: $BITFALL_APPLE_APPLE_CERTIFICATE_URL_LIST
  - BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
  - BITFALL_APPLE_APPLE_CERTIFICATE_PASSPHRASE_LIST: $BITFALL_APPLE_APPLE_CERTIFICATE_PASSPHRASE_LIST
  - BITFALL_APPLE_IOS_CERTIFICATE_NOPASSPHRASE_URL: $BITFALL_APPLE_IOS_CERTIFICATE_NOPASSPHRASE_URL
  - BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
  - BITFALL_APPLE_PROVISIONING_PROFILE_URL_LIST: $BITFALL_APPLE_PROVISIONING_PROFILE_URL_LIST
  - BITFALL_APPLE_FALLBACK_PROVISIONING_PROFILE_URL: $BITFALL_APPLE_FALLBACK_PROVISIONING_PROFILE_URL

  - BITFALL_APPSTORECONNECT_API_KEY_URL: $BITFALL_APPSTORECONNECT_API_KEY_URL
  - BITFALL_APPSTORECONNECT_API_KEY_ID: $BITFALL_APPSTORECONNECT_API_KEY_ID
  - BITFALL_APPSTORECONNECT_API_KEY_ISSUER_ID: $BITFALL_APPSTORECONNECT_API_KEY_ISSUER_ID

workflows:
  test_api_key_signing_manual_fallback_on_error:
    description: |-
      Running in isolation as overwrites auth params.
    steps:
    - bitrise-run:
        inputs:
        - workflow_id: utility_test_api_key_signing_manual_fallback_on_error
        - bitrise_config_path: ./e2e/bitrise.yml

  utility_test_api_key_signing_manual_fallback_on_error:
    description: Test fallback to manual signing on code signing error
    envs:
    - TEST_APP_URL: https://github.com/bitrise-io/sample-apps-ios-simple-objc.git
    - TEST_APP_BRANCH: new-certificates
    - BITRISE_PROJECT_PATH: ios-simple-objc/ios-simple-objc.xcodeproj
    - BITRISE_SCHEME: ios-simple-objc
    - DESTINATION: detect
    - CODE_SIGNING_METHOD: api-key
    - XCCONFIG_CONTENT: |
        COMPILER_INDEX_STORE_ENABLE = NO
        CODE_SIGN_IDENTITY = Apple Development: Tooling Bot Bitrise
    - MIN_DAYS_PROFILE_VALID: 0
    - IPA_EXPORT_METHOD: development
    - LOG_FORMATTER: xcodebuild
    - FALLBACK_PROFILES: $BITFALL_APPLE_FALLBACK_PROVISIONING_PROFILE_URL
    after_run:
    - _invalid_login
    - _run_xcode_archive
    - _check_outputs
    - _check_exported_artifacts

  _run_xcode_archive:
    steps:
    - script:
        title: Remove temp folder
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf "./_tmp"
            mkdir -p "./_tmp"
    - script:
        title: Remove provisioning profiles from previous runs
        run_if: .IsCI
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf "~/Library/MobileDevice/Provisioning Profiles"
            rm -rf "~/Library/Developer/Xcode/UserData/Provisioning Profiles"
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git:
        inputs:
        - repository_url: $TEST_APP_URL
        - branch: $TEST_APP_BRANCH
        - commit: $TEST_APP_COMMIT
        - clone_into_dir: ./_tmp
    - xcode-archive:
        title: Execute step
        inputs:
        - project_path: ./_tmp/$BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - platform: $DESTINATION
        - automatic_code_signing: $CODE_SIGNING_METHOD
        - min_profile_validity: $MIN_DAYS_PROFILE_VALID
        - certificate_url_list: $BITFALL_APPLE_APPLE_CERTIFICATE_URL_LIST|$BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - passphrase_list: $BITFALL_APPLE_APPLE_CERTIFICATE_PASSPHRASE_LIST|$BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - distribution_method: $IPA_EXPORT_METHOD
        - xcconfig_content: $XCCONFIG_CONTENT
        - icloud_container_environment: $IPA_EXPORT_ICLOUD_CONTAINER_ENVIRONMENT
        - export_development_team: $TEAM_ID
        - log_formatter: $LOG_FORMATTER
        - verbose_log: "yes"
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
        - fallback_provisioning_profile_url_list: $FALLBACK_PROFILES
        - api_key_path: $API_KEY_PATH
        - api_key_id: $API_KEY_ID
        - api_key_issuer_id: $API_KEY_ISSUER_ID

  _run:
    steps:
    - script:
        title: Remove temp folder
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf "./_tmp"
            mkdir -p "./_tmp"
    - script:
        title: Remove provisioning profiles from previous runs
        run_if: .IsCI
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf "~/Library/MobileDevice/Provisioning Profiles"
            rm -rf "~/Library/Developer/Xcode/UserData/Provisioning Profiles"
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git:
        inputs:
        - repository_url: $TEST_APP_URL
        - branch: $TEST_APP_BRANCH
        - commit: $TEST_APP_COMMIT
        - clone_into_dir: ./_tmp
    - path::./:
        title: Execute step
        inputs:
        - project_path: ./_tmp/$BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - platform: $DESTINATION
        - automatic_code_signing: $CODE_SIGNING_METHOD
        - min_profile_validity: $MIN_DAYS_PROFILE_VALID
        - certificate_url_list: $BITFALL_APPLE_APPLE_CERTIFICATE_URL_LIST|$BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - passphrase_list: $BITFALL_APPLE_APPLE_CERTIFICATE_PASSPHRASE_LIST|$BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - distribution_method: $IPA_EXPORT_METHOD
        - xcconfig_content: $XCCONFIG_CONTENT
        - icloud_container_environment: $IPA_EXPORT_ICLOUD_CONTAINER_ENVIRONMENT
        - export_development_team: $TEAM_ID
        - log_formatter: $LOG_FORMATTER
        - verbose_log: "yes"
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
        - fallback_provisioning_profile_url_list: $FALLBACK_PROFILES
        - api_key_path: $API_KEY_PATH
        - api_key_id: $API_KEY_ID
        - api_key_issuer_id: $API_KEY_ISSUER_ID

  _check_outputs:
    steps:
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        is_always_run: true
        inputs:
        - envs:
        - files:
        - dirs: |-
            BITRISE_APP_DIR_PATH
            BITRISE_DSYM_DIR_PATH
            BITRISE_XCARCHIVE_PATH
        - deploy_dir: $BITRISE_DEPLOY_DIR
        - deployed_files: |-
            BITRISE_IPA_PATH
            BITRISE_DSYM_PATH
            BITRISE_XCARCHIVE_ZIP_PATH
            BITRISE_XCODEBUILD_ARCHIVE_LOG_PATH
            BITRISE_XCODEBUILD_EXPORT_ARCHIVE_LOG_PATH
        - deployed_dirs:

  _check_exported_artifacts:
    before_run:
    - _expose_xcode_version
    steps:
    - script:
        title: Validate exported artifacts
        is_always_run: true
        inputs:
        - content: |-
            #!/usr/bin/env bash

            if [[ ${XCODE_MAJOR_VERSION} -ge 14 ]]; then
              echo "Xcode 14+ does not output dSYM files "
              exit 0
            fi

            cd $BITRISE_DSYM_DIR_PATH

            if [ $(find . -name '*.dSYM' -maxdepth 1| wc -l) -eq 0 ]; then
                echo "error, there are no files in the exported dSYM path!"
                ls -la
                exit 1
            fi

            if [ $(find . -maxdepth 1 ! -path . | wc -l) -gt $(find . -name '*.dSYM' -maxdepth 1 | wc -l) ]; then
                echo "error, there are non-dSYM files in the exported dSYM path!"
                ls -la
                exit 1
            fi
    - script:
        title: Check if all dSYMs are exported
        run_if: |-
          {{ getenv "DSYM_EXPECTED_COUNT" | ne "" }}
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            if [[ ${XCODE_MAJOR_VERSION} -ge 14 ]]; then
              echo "Xcode 14+ does not output dSYM files "
              exit 0
            fi

            cd $BITRISE_DSYM_DIR_PATH

            if [ $(find . -name '*.dSYM' -maxdepth 1 | wc -l) -ne $DSYM_EXPECTED_COUNT ]; then
              echo "error, expected dSYM count ($DSYM_EXPECTED_COUNT) doesn\'t match folder contents: "
              ls -la
              exit 1
            fi

  _check_archive_zip:
    steps:
    - script:
        inputs:
        - content: |-
            set -ex

            /usr/bin/unzip $BITRISE_XCARCHIVE_ZIP_PATH -d ./_tmp

            archive_path="./_tmp/ios-simple-objcTests.xcarchive"
            infoplist_path="$archive_path/Info.plist"
            if [[ ! -f "$infoplist_path" ]]; then
              echo "$infoplist_path does not exist."
              exit 1
            fi

  _invalid_login:
    steps:
    - script:
        title: Set invalid login
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            INVALID_BUILD_URL=./_invalid_authinfo
            echo '{"key_id": "x", "issuer_id": "x", "private_key": "x"}' > $INVALID_BUILD_URL

            BITRISE_BUILD_URL="file://$INVALID_BUILD_URL"
            BITRISE_BUILD_API_TOKEN="x"

            export BITRISE_BUILD_API_TOKEN
            export BITRISE_BUILD_API_TOKEN
            envman add --key BITRISE_BUILD_URL --value $BITRISE_BUILD_URL
            envman add --key BITRISE_BUILD_API_TOKEN --value $BITRISE_BUILD_API_TOKEN

  _expose_xcode_version:
    steps:
    - script:
        title: Expose Xcode major version
        inputs:
        - content: |-
            #!/bin/env bash
            set -e
            if [[ ! -z "$XCODE_MAJOR_VERSION" ]]; then
              echo "Xcode major version already exposed: $XCODE_MAJOR_VERSION"
              exit 0
            fi
            version=`xcodebuild -version`
            regex="Xcode ([0-9]*)."
            if [[ ! $version =~ $regex ]]; then
              echo "Failed to determine Xcode major version"
              exit 1
            fi
            xcode_major_version=${BASH_REMATCH[1]}
            echo "Xcode major version: $xcode_major_version"
            envman add --key XCODE_MAJOR_VERSION --value $xcode_major_version

  _restore_api_envs:
    steps:
    - script:
        title: Restore Bitrise API connection env vars
        inputs:
        - content: |-
            set -ex
            envman add --key BITRISE_BUILD_URL --value $BITRISE_BUILD_URL_BACKUP
            envman add --key BITRISE_BUILD_API_TOKEN --value $BITRISE_BUILD_API_TOKEN_BACKUP
